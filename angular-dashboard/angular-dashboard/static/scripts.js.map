{"version":3,"sources":["bowerdeps.js","module/main.module.coffee","module/dashboard.controller.coffee","module/view/modal/modal.controller.coffee","module/dashboard.tpl.jade","module/view/modal/modal.tpl.jade"],"names":[],"mappings":"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","file":"scripts.js","sourcesContent":["BOWERDEPS = (typeof BOWERDEPS === 'undefined') ? {}: BOWERDEPS;","# Register new module\nclass BuildbotFriDashboard extends App\n    constructor: -> return [\n        'ui.router', 'ui.bootstrap', 'buildbot_config', 'guanlecoja.ui', 'bbData'\n    ]\n\n# Register new state\nclass State extends Config\n    constructor: ($stateProvider, glMenuServiceProvider) ->\n\n        # Name of the state\n        name = \"buildbot_fri_dashboard\"\n        caption = \"FRI Dashboard v2.19\"\n        # Configuration\n        glMenuServiceProvider.addGroup\n            name: name\n            caption: caption\n            icon: 'user-circle'\n            order:  10\n        cfg =\n            group: name\n            caption: caption\n\n        # Register new state\n        state =\n            controller: \"buildbotFriDashboardController\"\n            controllerAs: \"d\"\n            templateUrl: \"buildbot_fri_dashboard/views/dashboard.html\"\n            name: name\n            url: \"/#{name}\"\n            data: cfg\n        $stateProvider.state(state)\n","class BuildbotFriDashboard extends Controller\n  constructor: ($scope, dataService, resultsService, @$uibModal) ->\n    _.mixin($scope, resultsService)\n    @data = dataService.open().closeOnDestroy($scope)\n\n    $scope.sourcestampsMap = @sourcestampsMap = {}\n    $scope.builds = @builds = {}\n    $scope.buildrequests = @buildrequests = {}\n\n    @buildrequestsMap = {}\n    @buildsetsMap = {}\n\n    @buildrequestsGetMap = {}\n    @buildsGetMap = {}\n\n    $scope.builders = @builders = @data.getBuilders()\n\n    epochTime = Math.floor((new Date).getTime()/1000)\n    earliestSubmittedTime = epochTime - (60 * 60 * 24 * 7)\n\n    @buildsets = @data.getBuildsets(limit:128, order: \"-bsid\", submitted_at__gt:earliestSubmittedTime)\n    @buildsets.onChange = @onChangeBuildsets\n\n  onChangeBuildsets: =>\n    if not (@buildsets.$resolved and @buildsets.length > 0)\n      return\n\n    getChangeFromBbSourceStamp = (sourcestampdetails) ->\n      fakeChange = {\n        \"revision\": sourcestampdetails['revision'],\n        \"when_timestamp\": sourcestampdetails['created_at'],\n        \"codebase\": sourcestampdetails['codebase'],\n        \"repository\": sourcestampdetails['repository'],\n        \"branch\": sourcestampdetails['branch'],\n      }\n      if sourcestampdetails.hasOwnProperty('patch') and sourcestampdetails['patch']\n        fakeChange[\"author\"] = sourcestampdetails['patch']['author']\n        fakeChange[\"comments\"] = sourcestampdetails['patch']['comment']\n      return fakeChange\n\n    for buildset in @buildsets\n      sourcestamps = buildset['sourcestamps']\n      if sourcestamps.length != 1\n        console.log(\"Unexpected sourcestamps for buildset \" + buildset['bsid'])\n      sourcestamp = sourcestamps[0]\n      ssid = sourcestamp['ssid']\n      if not @sourcestampsMap.hasOwnProperty(ssid)\n        @sourcestampsMap[ssid] = {\n          change: getChangeFromBbSourceStamp(sourcestamp),\n          buildsets : []\n        }\n      @sourcestampsMap[ssid]['buildsets'].push(buildset['bsid'])\n      console.log @sourcestampsMap\n      @buildrequestsGetMap[buildset['bsid']] = @data.getBuildrequests(buildsetid: buildset['bsid'])\n      @buildrequestsGetMap[buildset['bsid']].onChange = @onChangeBuildrequests\n\n  onChangeBuildrequests: =>\n    for id, buildreq of @buildrequestsGetMap\n      if not buildreq.$resolved\n        return\n\n    for buildsetid, buildrequests of @buildrequestsGetMap\n      @buildsetsMap[buildsetid] = {}\n      @buildsetsMap[buildsetid]['pendingBuildrequests'] = {}\n      @buildsetsMap[buildsetid]['claimedBuildrequests'] = {}\n\n      for buildrequest in buildrequests\n        buildrequestid = buildrequest['buildrequestid']\n\n        if buildrequest[\"claimed\"]\n          @buildsGetMap[buildrequestid] = @data.getBuilds(buildrequestid: buildrequestid)\n          @buildsGetMap[buildrequestid].onChange = @onChangeBuild\n          @buildsetsMap[buildsetid]['claimedBuildrequests'][buildrequestid] = buildrequest\n        else\n          @buildsetsMap[buildsetid]['pendingBuildrequests'][buildrequestid] = buildrequest\n\n  onChangeBuild: =>\n    for id, bld of @buildsGetMap\n      if not bld.$resolved\n        return\n    for buildrequestid, builds of @buildsGetMap\n      @buildrequestsMap[buildrequestid] = {}\n      for build in builds\n        @buildrequestsMap[buildrequestid][build['buildid']] = build\n    @generateBuildsMap()\n\n\n  generateBuildsMap: =>\n    for ssid, sourcestamp of @sourcestampsMap\n      @builds[ssid] = {}\n      @buildrequests[ssid] = {}\n      for buildsetid in sourcestamp[\"buildsets\"]\n        for buildrequestid, buildrequest of @buildsetsMap[buildsetid]['claimedBuildrequests']\n          for buildid, build of @buildrequestsMap[buildrequestid]\n            if not @builds[ssid].hasOwnProperty(buildrequest[\"builderid\"])\n              @builds[ssid][buildrequest[\"builderid\"]] = {}\n            @builds[ssid][buildrequest[\"builderid\"]][buildid] = build\n        for buildrequestid, buildrequest of @buildsetsMap[buildsetid]['pendingBuildrequests']\n          if not @buildrequests[ssid].hasOwnProperty(buildrequest[\"builderid\"])\n            @buildrequests[ssid][buildrequest[\"builderid\"]] = {}\n          @buildrequests[ssid][buildrequest[\"builderid\"]][buildrequestid] = buildrequest\n     console.log \"Number of builds: \" + Object.keys(@builds).length\n     console.log @builds\n\n  selectBuild: (build) ->\n    modal = @$uibModal.open\n      templateUrl: \"buildbot_fri_dashboard/views/modal.html\"\n      controller: 'dashboardModalController as modal'\n      windowClass: 'modal-big'\n      resolve:\n        selectedBuild: -> build\n","class DashboardModal extends Controller\n    constructor: ($scope, @$uibModalInstance, @selectedBuild) ->\n        $scope.$on '$stateChangeStart', =>\n            @close()\n\n    close: ->\n        @$uibModalInstance.close()\n",".container.mydashboard\n  table.table\n    tr\n      th SourceStamp\n      th(ng-repeat=\"builder in builders\")\n        a(ng-href='#/builders/{{ builder.builderid }}'\n          ng-bind='builder.name')\n    tr(ng-repeat=\"(id, sourcestamp) in sourcestampsMap\")\n      td\n        changedetails(change='sourcestamp.change')\n          td(ng-repeat=\"builder in builders\")\n            a(ng-repeat=\"(buildid, build) in builds[id][builder.builderid]\")\n                        span.badge-status(\n                                        ng-class=\"results2class(build, 'pulse')\"\n                                        ng-click='d.selectBuild(build)')\n                            | {{ build.number }}\n            a(ng-repeat=\"(buildrequestid, buildrequest) in buildrequests[id][builder.builderid]\", ui-sref=\"buildrequest({buildrequest: buildrequest.buildrequestid})\")\n              span.badge-status(ng-class=\"results2class(buildrequest, 'pulse')\")\n                .badge-inactive {{buildrequest.buildrequestid}}\n                .badge-active {{results2text(buildrequest)}}\n                            | {{ buildrequest.buildrequestid }}\n","// Show build summary for the selected build in a modal window\n.modal-header\n    i.fa.fa-times.pull-right(ng-click='modal.close()')\n    h4.modal-title Build summary\n.modal-body\n    buildsummary(ng-if='modal.selectedBuild' buildid='modal.selectedBuild.buildid')\n"],"sourceRoot":"/source/"}